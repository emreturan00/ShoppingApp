package com.example.shoppingapp.services;
import java.sql.*;

import com.example.shoppingapp.models.CartItem;
import com.example.shoppingapp.models.Product;
import com.example.shoppingapp.repository.DatabaseAdapter;

import java.util.ArrayList;
import java.util.List;
public class CartService {
    private DatabaseAdapter databaseAdapter;

    public CartService(DatabaseAdapter databaseAdapter) {
        this.databaseAdapter = databaseAdapter;
    }

    public void addToCart(Product product, int quantity, String username) {
        try (Connection connection = databaseAdapter.getConnection()) {
            // Omitting the product_id in the INSERT statement to let the database auto-generate it
            String insertQuery = "INSERT INTO cartinfo (user_id, product_id, quantity) VALUES ((SELECT user_id FROM User WHERE username = ?), ?, ?)";
            try (PreparedStatement insertStatement = connection.prepareStatement(insertQuery, Statement.RETURN_GENERATED_KEYS)) {
                insertStatement.setString(1, username);
                // Note: We don't set the product_id here, as it will be auto-generated by the database
                insertStatement.setInt(2, product.getProductId());
                insertStatement.setInt(3, quantity);

                int affectedRows = insertStatement.executeUpdate();
                if (affectedRows > 0) {
                    // Retrieve the auto-generated product_id
                    try (ResultSet generatedKeys = insertStatement.getGeneratedKeys()) {
                        if (generatedKeys.next()) {
                            int autoGeneratedProductId = generatedKeys.getInt(1);
                            System.out.println("Product added to cart successfully with ID: " + autoGeneratedProductId);
                        } else {
                            System.out.println("Product added to cart, but couldn't retrieve auto-generated ID.");
                        }
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace(); // Handle the exception appropriately
        }
    }


    public List<CartItem> viewCart(String username) {
        List<CartItem> cartItems = new ArrayList<>();

        try (Connection connection = databaseAdapter.getConnection()) {
            String query = "SELECT c.quantity, p.* FROM cartinfo c JOIN Product p ON c.product_id = p.product_id WHERE c.user_id = (SELECT user_id FROM User WHERE username = ?)";
            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                preparedStatement.setString(1, username);
                try (ResultSet resultSet = preparedStatement.executeQuery()) {
                    while (resultSet.next()) {
                        int quantity = resultSet.getInt("quantity");
                        int productId = resultSet.getInt("product_id");
                        String productName = resultSet.getString("Name");
                        String productType = resultSet.getString("type");
                        int stock = resultSet.getInt("stock");
                        double price = resultSet.getDouble("price");
                        String imageLocation = resultSet.getString("imageLocation");
                        int threshold = resultSet.getInt("threshold");

                        Product product = new Product(productName, productType, stock, price, imageLocation, threshold);
                        CartItem cartItem = new CartItem(product, quantity);
                        cartItems.add(cartItem);
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace(); // Handle the exception appropriately
        }

        return cartItems;
    }

    public void completeOrder(String username) {
        // Implement the logic to complete the order
        // This might involve moving the items from the cart to a separate table representing orders
        // and updating the product stock accordingly
        // ...
    }
}
